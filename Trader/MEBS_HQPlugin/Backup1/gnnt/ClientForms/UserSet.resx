<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAAAAAAAAQCBABWQ0YAZFtZAFsyHwBCJBcAPiMXAKRfQABuQy8AHxQPAJloUQBzQywAXDgmAIlT
        OQBjPSoArm1LAJNbQADDelYAXj0tALyDZgDZoYUAxZN6ALWPfQCEUzgAcUgyAJdiRgDOh2AAJhkSANeO
        ZwA/Kh8AyoplAGZGNADPkG0A2JZyAMGIZwDIjGwA6quIAMyehQC0eVYAh1tBAKp0UwAzIxkAwoZiADsp
        HgDinXQALSAYALKAYAD1sYcAhWBKAJtxVwDmqoQAzZZ1AIpmUAB0VkQA4quJANeskwDv288A25htAIBZ
        QABXPSwAc1E7ALiCXwBLNigAvolmANGYcQDrrIIAAAAAAO2whQDXn3sAsIRmAOmwiwC6jW8A8LaQANGi
        gQDFlnQA88CaAPLEogDiv6QA07KaAN28owDYvKcA5LCGAOayiADfrYYA+MKWAPbClgD+yJ0AyaB+APnI
        oADnupUAzaeHAOnCowDZuZ4A9cqkANOwkQD1zaoA6MuwANWuiQDVsI0A27eSAGxbSgDkxKQA7tK3AO3H
        nwDdu5YA5MKcAO3MqAD12LoA9dOpAPDTrwDu0K4A9NWsAPbYsADy2LUA8de2APffwADz3b0A+OG9APfg
        tgD458gA9ubCAPnrxAAWFREAXWRcAFFuYgBTgX0AH0JBABv//wAa9fUAFcPEAA+KigAOg4QAGeHhAB36
        +gARkZIAHv//ABjLzAAXwMAAFrm5ABjBwQAVq6wAH/P0AB7q7AAUnZ4AD3FyACP//wAk+vkAJ///ACPl
        5QAJOzsAKvz7ADf//wAppqYAQP//ACicnABL//8AWf//AECzswBa6usAZ/n5AKX6+gCP1tcAaZSUAKfp
        6gC8/v4AV3BwAMn//wBibW0AAVZZABHL0QAZ9/4AE7K1AAtjZgAa5OoAGc/WAA1ucAAb2N8AFrW7ABWu
        sgAQhYgAH/j/ABnGyQAjgoUAR8nMAE7W2QA3kZQANIiKAGTp7gCW9/oAcK2uALb9/wCGsLEABmZrAA2h
        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
        8Af///gP///8H////D////7/
</value>
  </data>
</root>